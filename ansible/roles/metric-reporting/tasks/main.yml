- name: Download package from S3
  amazon.aws.aws_s3:
    bucket: "{{s3_bucket}}"
    object: "{{s3_daemons_prefix}}{{ daemon }}.tgz"
    dest: "{{ role_path }}/files/tmp/{{ daemon }}.tgz"
    mode: get
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"

- name: Make destination directory
  ansible.builtin.file:
    path: "{{ ct_installation_dir }}"
    owner: root
    group: root
    mode: "755"
    state: directory

- name: Extract tar files
  ansible.builtin.unarchive:
    src: "tmp/{{ daemon }}.tgz"
    dest: "{{ ct_installation_dir }}"
    creates: "{{ ct_installation_dir }}/{{ daemon }}"

- name: Install systemd file
  ansible.builtin.template:
    src: "{{ daemon }}.service"
    dest: /lib/systemd/system/{{ daemon }}.service
    owner: root
    group: root
    mode: "644"
  when: not docker_build | bool

- name: Adjust visualisation host in config
  vars:
    path: "{{ct_installation_dir}}/{{daemon}}/config/config.yml"
  ansible.builtin.replace:
    path: "{{path}}"
    regexp: '^(.*)http://localhost:7000(.*)$'
    replace: '\1http://visualisation:7000\2'
  when: docker_build | bool

- name: Install logrotate configuration
  ansible.builtin.copy:
    src: "{{daemon}}.logrotate"
    dest: "/etc/logrotate.d/{{daemon}}"

- name: Enable metric reporting daemon
  ansible.builtin.service:
    name: "{{ daemon }}"
    state: started
    enabled: yes
  when: not docker_build | bool
