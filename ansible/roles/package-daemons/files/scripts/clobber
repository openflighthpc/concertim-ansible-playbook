#!/usr/bin/env ruby1.9

service = ARGV[0]
`logger "clobber service: #{service}"`

def term(service, tries, force)

  method = force ? "forcibly" : "normally"
  opt = force ? '-9' : ''

  remaining = 0
  tries.each do |wait|
    `logger "Trying to kill processes #{method}"`
    `pkill #{opt} #{service}`
    procs = `pgrep #{service}`.split
    remaining = procs.size
    if remaining > 0
      `logger "There are still #{remaining} processes remaining. Sleeping..."`
      sleep wait
    else
      `logger "All processes killed #{method}"`
      break
    end
  end
  remaining

end

# try and kill the service normally
remaining = term(service, [3,2,2,5], false)

# try and forcibly kill the service
remaining = term(service, [1], true) if remaining > 0

if remaining > 0
  `logger "There are still #{remaining} processes after normal and forced kills"`
end
