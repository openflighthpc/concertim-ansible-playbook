#!/bin/sh
################################################################################
# (c) Copyright 2000-2011 Concurrent Thinking Ltd.                             #
#                                                                              #
# PHOENIX DELAYED_JOB                                                          #
#                                                                              #
# Many software packages included in this system are protected under           #
# international copyright laws. Unauthorized copying, distribution or          #
# modification is prohibited and authorized distribution, copying or           #
# modification is subject to the copyright notice of each individual package.  #
#                                                                              #
# THIS SOFTWARE IS PROVIDED "AS IS", WITHOUT ANY EXPRESS OR IMPLIED WARRANTY.  #
# IN PARTICULAR, NEITHER THE AUTHORS NOR CONCURRENT THINKING LTD MAKE ANY      #
# REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE FITNESS OF THIS        #
# SOFTWARE FOR ANY PARTICULAR PURPOSE.                                         #
#                                                                              #
# This file was written by Mark J. Titorenko of Concurrent Thinking Ltd and is #
# protected by copyright. Unauthorized copying, distribution or modification   #
# is prohibited.                                                               #
################################################################################
#
# description: Delayed job provides a means of running background tasks
#              
### BEGIN INIT INFO
# Provides:          delayed_job
# Required-Start:    emma
# Required-Stop:     emma
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin
NAME=delayed_job
DESC="Phoenix DELAYED_JOB"
DIR=/data/private/share/emma/core
PIDFILE=$DIR/tmp/$NAME.pid
if [ ! -s ${PIDFILE} ]; then rm -f ${PIDFILE};fi # If file got left behind and is empty this script fails

. /lib/lsb/init-functions

# if [ $UID -gt 0 ]; then
#   echo "ERROR - must run as root"
#   exit 1
# fi

cd $DIR

case "$1" in
  start)
        log_daemon_msg "Starting $DESC"
        sudo -u www-data RAILS_ENV=production script/delayed_job start >> /var/log/delayed_job.log 2>&1
        RETVAL=$?
        log_end_msg $RETVAL
        ;;
    stop)
        log_daemon_msg "Stopping $DESC"
        # sudo -u www-data RAILS_ENV=production script/delayed_job stop >> /var/log/delayed_job.log 2>&1
	kill -9 `cat ${PIDFILE}`
        rm -f $PIDFILE
        RETVAL=$?
        log_end_msg $RETVAL
        ;;
    restart)
        log_daemon_msg "Restarting $DESC"
        sudo -u www-data RAILS_ENV=production script/delayed_job stop >> /var/log/delayed_job.log 2>&1
        rm -f $PIDFILE
        RETVAL=$?
        log_end_msg $RETVAL
        sleep 5
        sudo -u www-data RAILS_ENV=production script/delayed_job start >> /var/log/delayed_job.log 2>&1
        RETVAL=$?
        log_end_msg $RETVAL
        ;;
    status)
        echo -n "Status of $DESC: "
        if [ ! -r "$PIDFILE" ]; then
            echo "$NAME is not running."
            exit 3
        fi
        if read pid < "$PIDFILE" && ps -p "$pid" > /dev/null 2>&1; then
            echo "$NAME is running - $pid."
            exit 0
        else
            echo "$NAME is not running but $PIDFILE exists."
            exit 1
        fi
        ;;
    *)
      echo "Usage: $0 {start|stop|restart|status}"
      exit 1
      ;;
esac

exit $RETVAL
