diff -ur a/lib/maggie.rb b/lib/maggie.rb
--- a/lib/maggie.rb	2015-01-14 10:56:55.000000000 +0000
+++ b/lib/maggie.rb	2022-11-04 12:47:14.459830916 +0000
@@ -14,7 +14,7 @@
   COST_BAND_KEY               = 'sas:costbands'
   DEVICES_KEY                 = 'hacor:devices'
   DATA_SOURCE_MAP_KEY         = 'hacor:data_source_map'
-  HISTORIC_METRICS_KEY        = "maggie:historic_metrics:#{Phoenix::IntfUtils::eui('eth1').upcase}"
+  HISTORIC_METRICS_KEY        = "maggie:historic_metrics:#{Phoenix::IntfUtils::eui('eth1').upcase rescue 'UNKNOWN'}"
   START_TIME_KEY              = 'maggie:start_time'
   APPLIANCE_CONFIG_KEY        = 'hacor:appliance_configs'
   DERIVED_METRIC_FORMULAE_KEY = 'meca:derived_metrics'
diff -ur a/lib/processor/inferred_metrics_processor.rb b/lib/processor/inferred_metrics_processor.rb
--- a/lib/processor/inferred_metrics_processor.rb	2015-01-09 19:14:14.000000000 +0000
+++ b/lib/processor/inferred_metrics_processor.rb	2022-11-04 12:47:51.180889605 +0000
@@ -61,7 +61,7 @@
         conflicting_formulae = {}
         reset_formulae = []
         buckets = {}
-        eui = File.read("/sys/class/net/eth1/address").chomp.upcase rescue ''
+        eui = File.read("/sys/class/net/eth1/address").chomp.upcase rescue 'UNKNOWN'
         command = !File.exists?('/etc/concurrent-thinking/mia.yaml')
         gmond_result = nc.process_formulae(eui, command, dsm, historic_metrics, empty_formulae, invalid_formulae, conflicting_formulae, reset_formulae, co2_multiplier, cost_multiplier, "#{currency}/h", buckets, options, gc, output)
         output.each {|out| Log.info "#{out.chomp}"}
diff -ur a/lib/processor/location.rb b/lib/processor/location.rb
--- a/lib/processor/location.rb	2013-11-29 15:11:58.000000000 +0000
+++ b/lib/processor/location.rb	2022-11-04 12:47:32.360351927 +0000
@@ -6,7 +6,7 @@
     attr_accessor :local_eui
 
     def initialize
-      @local_eui            = Phoenix::IntfUtils::eui('eth1').upcase
+      @local_eui            = Phoenix::IntfUtils::eui('eth1').upcase rescue 'UNKNOWN'
     end
 
     def get_device_keys_to_process
