- name: Download daemon packages from S3
  amazon.aws.aws_s3:
    bucket: "{{s3_bucket}}"
    object: "{{s3_daemons_prefix}}{{ item }}.tgz"
    dest: "{{ role_path }}/files/tmp/{{ item }}.tgz"
    mode: get
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
  loop: "{{ static_daemons }}"

- name: Make destination directory
  ansible.builtin.file:
    path: "{{ daemon_installation_dir }}"
    owner: root
    group: root
    mode: "755"
    state: directory

- name: Extract tar files
  ansible.builtin.unarchive:
    src: "tmp/{{ item }}.tgz"
    dest: "{{ daemon_installation_dir }}"
    creates: "{{ daemon_installation_dir }}/{{ item }}"
  loop: "{{ static_daemons }}"

- name: Install systemd {{item}}.service file
  ansible.builtin.copy:
    src: "{{ item }}.service"
    dest: /lib/systemd/system/{{ item }}.service
    owner: root
    group: root
    mode: "644"
  loop: "{{ static_daemons }}"

- name: Install {{item}} logrotate configuration
  ansible.builtin.copy:
    src: "{{item}}.logrotate"
    dest: "/etc/logrotate.d/{{item}}"
  loop: "{{ static_daemons }}"

- name: Additional metric reporting daemon configuration
  include_tasks: metric_reporting_daemon_config.yml

- name: Ensure that daemons are enabled
  ansible.builtin.service:
    name: "{{ item }}"
    # state: started
    enabled: yes
  loop: "{{ static_daemons }}"
