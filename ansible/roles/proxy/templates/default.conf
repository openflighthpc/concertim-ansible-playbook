{% if proxy_http_port -%}
server {
  listen 80 default_server;
  listen [::]:80 default_server;

  # Redirect all traffic to HTTPS.
  {% if proxy_https_port == 443 -%}
  return 307 https://$host$request_uri;
  {% else -%}
  return 307 https://$host:{{proxy_https_port}}$request_uri;
  {% endif %}
}
{% endif %}

server {
  listen {{proxy_https_port}} ssl default;

  client_max_body_size 0;
  # add Strict-Transport-Security to prevent man in the middle attacks
  add_header Strict-Transport-Security "max-age=31536000";

  # SSL configuration.
  ssl_certificate {{proxy.ssl.crt_container_path}};
  ssl_certificate_key {{proxy.ssl.key_container_path}};
  ssl_session_cache shared:SSL:1m;
  ssl_session_timeout 5m;
  ssl_ciphers HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers on;

  root {{static_content_mount}};

  location ^~ /assets/ {
	  # The default behaviour is to serve the files from the configured root, which
	  # is exactly what we want here.
  }

  location ^~ /sys/date {
	  rewrite ^/sys/date$ /sys/date_responder.php;
	  include snippets/fastcgi-php.conf;
	  fastcgi_pass unix:/run/php/php8.1-fpm.sock;
  }

  location ^~ /mrd/ {
	  proxy_pass http://{{metric_reporting_daemon_hostname}}:{{metric_reporting_daemon_api_port}}/;
	  proxy_pass_request_headers on;
	  include /etc/nginx/proxy_params;
  }

  # This location section needs to be last as it proxies all requests to the
  # ct-visualisation-app.  If a request should be handled differently, that
  # handling needs to be defined before this.
  location ^~ / {
	  proxy_pass http://{{visualisation_app_hostname}}:{{visualisation_app_port}}/;
	  proxy_pass_request_headers on;
	  include /etc/nginx/proxy_params;
  }
}
