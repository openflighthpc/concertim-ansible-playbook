- name: Check for dev installation
  ansible.builtin.command:
    cmd: ls -d {{dev_root_dir}}/ct-visualisation-app
  register: dev_ct_vis_dir
  failed_when: False


- name: Bundle install gems for dev ct-visualisation-app
  ansible.builtin.shell: |
    cd {{dev_root_dir}}/ct-visualisation-app/
    ./bin/bundle install
  when: dev_ct_vis_dir.stdout != ""


# - name: unmonitor ct-vis-app
#   ansible.builtin.command:
#     cmd: monit unmonitor ct-visualisation-app


- name: Disable production ct-visualisation-app
  ansible.builtin.service:
    name: "{{item}}"
    state: stopped
    enabled: no
  loop:
    - ct-visualisation-app
    - ct-visualisation-job-runner


- name: Workaround git and vboxfs issue
  ansible.builtin.command:
    cmd: git config --global --add safe.directory /opt/concertim/dev/ct-visualisation-app


- name: Configure users
  import_tasks: run_rails_runner.yml
  vars:
    rails_runner: ./bin/rails runner
    runner_args: /usr/local/sbin/set-user-defaults.rb
    ruby_bin_dir: "{{ruby_30_bin_dir}}"
    additional_env: ""
    chdir: "{{dev_root_dir}}/ct-visualisation-app/"
    user: root


- name: Start dev server
  ansible.builtin.command:
    cmd: screen -dmS ct-vis-app ./bin/dev
    chdir: "{{dev_root_dir}}/ct-visualisation-app/"

- name: Create dev templates
  block:
    - name: Wait for dev server to start
      ansible.builtin.pause:
        seconds: 30

    - name: Run populate templates script
      ansible.builtin.shell:
        chdir: "{{dev_root_dir}}/ct-visualisation-app/docs/api/examples"
        cmd: |
          export CONCERTIM_HOST=localhost
          export AUTH_TOKEN=$(LOGIN=admin PASSWORD={{default_users.admin.password}} ./get-auth-token.sh)
          if [ $(./list-templates.sh | jq 'length') -eq 0 ] ; then
            echo "Populating dev templates"
            ./populate-templates.sh
          else
            echo "Templates previously populated"
          fi
