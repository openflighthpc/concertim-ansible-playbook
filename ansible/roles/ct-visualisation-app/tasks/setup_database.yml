- name: Configure database user
  block:
    - name: Check if {{ app_user }} role exists
      ansible.builtin.command:
        cmd: sudo -u postgres psql postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='{{ app_user }}'"
      register: db_user_exist

    - name: Create {{ app_user }} role
      when: db_user_exist.stdout == ""
      ansible.builtin.command:
        cmd: sudo -u postgres createuser {{ app_user }} -S -R -d

- name: Create database
  vars:
    task: db:create
  ansible.builtin.shell:
    cmd: |
      sudo -u {{ app_user }} /bin/bash -c 'RAILS_ENV={{rails_env}} ./bin/rails {{task}} --trace'
    chdir: "{{ct_vis_app_core_dir}}"

- name: Add SUPERUSER role to {{app_user}}
  vars:
    dbname: ct-vis
    dbsuperuser: postgres
  ansible.builtin.shell: |
    sudo -u {{dbsuperuser}} /bin/bash -c 'psql -d {{dbname}} -U {{dbsuperuser}} -f /dev/stdin <<< "ALTER ROLE \"{{app_user}}\" SUPERUSER"'

- name: Migrate database
  vars:
    task: db:migrate
  ansible.builtin.shell:
    cmd: |
      sudo -u {{ app_user }} /bin/bash -c 'RAILS_ENV={{rails_env}} ./bin/rails {{task}} --trace'
    chdir: "{{ct_vis_app_core_dir}}"

- name: Remove SUPERUSER role from {{app_user}}
  vars:
    dbname: ct-vis
    dbsuperuser: postgres
  ansible.builtin.shell: |
    sudo -u {{dbsuperuser}} /bin/bash -c 'psql -d {{dbname}} -U {{dbsuperuser}} -f /dev/stdin <<< "ALTER ROLE \"{{app_user}}\" NOSUPERUSER"'
