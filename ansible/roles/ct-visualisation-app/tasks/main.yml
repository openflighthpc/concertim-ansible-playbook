- name: Install dependencies
  register: result
  until: result is success
  ansible.builtin.apt:
    name:
      - ruby3.0

- name: Install build dependencies
  register: result
  until: result is success
  ansible.builtin.apt:
    name:
      - ruby3.0-dev
      - autoconf
      - bison
      - build-essential
      - libpq-dev

- name: Check for existing installation
  ansible.builtin.command:
    cmd: ls -d {{ ct_vis_app_path }}
  register: ct_vis_app_dir
  failed_when: False

- name: Install ct-visualisation-app
  include_tasks: install_ct_vis_app_package.yml
  when: ct_vis_app_dir.stdout == ""

- name: Install logrotate configuration
  ansible.builtin.template:
    src: ct-visualisation-app.logrotate
    dest: /etc/logrotate.d/ct-visualisation-app

- name: Bundle install gems
  register: result
  until: result is success
  ansible.builtin.shell: |
    cd "{{ ct_vis_app_core_dir }}"
    ./bin/bundle install

- name: Create new master key and credentials
  block:
    - name: Remove existing key and credentials
      ansible.builtin.file:
        path: "{{ct_vis_app_core_dir}}/config/{{item}}"
        state: absent
      loop:
        - master.key
        - credentials.yml.enc

    - name: Create master key and credentials
      ansible.builtin.shell:
        chdir: "{{ ct_vis_app_core_dir }}"
        cmd: |
          sudo -u {{app_user}} /bin/bash -c 'EDITOR=cat ./bin/rails credentials:edit'

# Installs database config for accessing DB on a remote host.
# XXX Would be better to have the config in ct-visualisation-app set the host
# and we can adjust it here using ansible.builtin.replace
- name: Install database config
  when: docker_build | bool
  ansible.builtin.copy:
    src: database.yml
    dest: "{{ct_vis_app_core_dir}}/config/"
    owner: "{{app_user}}"
    group: "{{app_user}}"
    mode: "0644"

- name: Setup database
  tags: docker-postbuild
  when: not docker_build | bool
  import_tasks: setup_database.yml

- name: Create default users
  tags: docker-postbuild
  when: not docker_build | bool
  import_tasks: create_default_users.yml

- name: Add licence limits
  import_tasks: licence_limits.yml

- name: Precompile assets
  import_tasks: run_rake_task.yml
  vars:
    ruby_bin_dir: "{{ruby_30_bin_dir}}"
    rake_task: "assets:precompile"
    additional_env: ""
    chdir: "{{ ct_vis_app_core_dir }}"

- name: Install systemd service files
  ansible.builtin.template:
    src: "{{item}}.service"
    dest: /lib/systemd/system/{{item}}.service
    owner: root
    group: root
    mode: "644"
  loop:
    - ct-visualisation-app
    - ct-visualisation-job-runner

- name: Enable visualisation app (non-docker)
  ansible.builtin.service:
    name: "{{item}}"
    enabled: yes
    state: restarted
  loop:
    - ct-visualisation-app
    - ct-visualisation-job-runner
  when: not docker_build | bool

- name: Enable visualisation app (docker)
  ansible.builtin.file:
    src: /lib/systemd/system/{{item}}.service
    dest: /etc/systemd/system/multi-user.target.wants/{{item}}.service
    state: link
  loop:
    - ct-visualisation-app
    - ct-visualisation-job-runner
  when: docker_build | bool
