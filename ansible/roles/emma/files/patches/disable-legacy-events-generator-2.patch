diff -ur emma.orig/ivy/app/models/ivy/chassis.rb emma/ivy/app/models/ivy/chassis.rb
--- emma.orig/ivy/app/models/ivy/chassis.rb	2022-10-11 22:37:04.797382292 +0000
+++ emma/ivy/app/models/ivy/chassis.rb	2022-10-11 22:40:52.496037232 +0000
@@ -202,8 +202,8 @@
           chassis_type = self.changes[:type].nil? ? self.type : self.changes[:type].first
           actor_id = self.id
         end
-        actor = LegacyEventsGenerator.actor_object_from_type_and_id(chassis_type, actor_id)
-        @event = LegacyEventsGenerator.new_user_event("#{chassis_type} moved (#{Thread.current[:nice_name]})", {:happened_at => Time.now})
+#        actor = LegacyEventsGenerator.actor_object_from_type_and_id(chassis_type, actor_id)
+#        @event = LegacyEventsGenerator.new_user_event("#{chassis_type} moved (#{Thread.current[:nice_name]})", {:happened_at => Time.now})
 #        LegacyEventsGenerator.set_actors_for_user_event(@event, actor.source_id, actor.source_type)
       end
       yield
@@ -211,16 +211,16 @@
 
     def destroy_event 
       if self.complex? 
-        actor = LegacyEventsGenerator.actor_object_from_type_and_id(self.type, self.id) 
-        @event = LegacyEventsGenerator.new_user_event("Chassis deleted (#{Thread.current[:nice_name]})", {:happened_at => Time.now}) 
+#        actor = LegacyEventsGenerator.actor_object_from_type_and_id(self.type, self.id) 
+#        @event = LegacyEventsGenerator.new_user_event("Chassis deleted (#{Thread.current[:nice_name]})", {:happened_at => Time.now}) 
 #        LegacyEventsGenerator.set_actors_for_user_event(@event, actor.source_id, actor.source_type) 
       end 
     end 
   
     def create_event 
       if self.complex? 
-        actor = LegacyEventsGenerator.actor_object_from_type_and_id(self.type, self.id) 
-        @event = LegacyEventsGenerator.new_user_event("Chassis created (#{Thread.current[:nice_name]})", {:happened_at => Time.now}) 
+#        actor = LegacyEventsGenerator.actor_object_from_type_and_id(self.type, self.id) 
+#        @event = LegacyEventsGenerator.new_user_event("Chassis created (#{Thread.current[:nice_name]})", {:happened_at => Time.now}) 
 #        LegacyEventsGenerator.set_actors_for_user_event(@event, actor.source_id, actor.source_type) 
       end 
     end
diff -ur emma.orig/ivy/app/models/ivy/device.rb emma/ivy/app/models/ivy/device.rb
--- emma.orig/ivy/app/models/ivy/device.rb	2022-10-11 22:37:17.185528475 +0000
+++ emma/ivy/app/models/ivy/device.rb	2022-10-11 22:42:10.952939036 +0000
@@ -230,8 +230,8 @@
     def check_for_changes
       unless self.kind_of? Ivy::Device::TaggedDevice
         if !self.new_record? and self.slot_id_changed?
-          actor = LegacyEventsGenerator.actor_object_from_name("Device", self.name)
-          @event = LegacyEventsGenerator.new_user_event("Device moved (#{Thread.current[:nice_name]})", {:happened_at => Time.now})
+#          actor = LegacyEventsGenerator.actor_object_from_name("Device", self.name)
+#          @event = LegacyEventsGenerator.new_user_event("Device moved (#{Thread.current[:nice_name]})", {:happened_at => Time.now})
 #          LegacyEventsGenerator.set_actors_for_user_event(@event, actor.source_id, "Device")
         end
       end
@@ -487,16 +487,16 @@
 
     def destroy_event 
       unless self.kind_of? Ivy::Device::TaggedDevice 
-        actor = LegacyEventsGenerator.actor_object_from_name("Device", self.name) 
-        @event = LegacyEventsGenerator.new_user_event("Device deleted (#{Thread.current[:nice_name]})", {:happened_at => Time.now}) 
+#        actor = LegacyEventsGenerator.actor_object_from_name("Device", self.name) 
+#        @event = LegacyEventsGenerator.new_user_event("Device deleted (#{Thread.current[:nice_name]})", {:happened_at => Time.now}) 
 #        LegacyEventsGenerator.set_actors_for_user_event(@event, actor.source_id, "Device") 
       end 
     end 
  
     def create_event 
       unless self.kind_of? Ivy::Device::TaggedDevice 
-        actor = LegacyEventsGenerator.actor_object_from_name("Device", self.name) 
-        @event = LegacyEventsGenerator.new_user_event("Device created (#{Thread.current[:nice_name]})", {:happened_at => Time.now}) 
+#        actor = LegacyEventsGenerator.actor_object_from_name("Device", self.name) 
+#        @event = LegacyEventsGenerator.new_user_event("Device created (#{Thread.current[:nice_name]})", {:happened_at => Time.now}) 
 #        LegacyEventsGenerator.set_actors_for_user_event(@event, actor.source_id, "Device") 
       end 
     end 
diff -ur emma.orig/ivy/app/models/ivy/hw_rack.rb emma/ivy/app/models/ivy/hw_rack.rb
--- emma.orig/ivy/app/models/ivy/hw_rack.rb	2022-10-11 18:02:56.864876924 +0000
+++ emma/ivy/app/models/ivy/hw_rack.rb	2022-10-11 22:44:02.974218022 +0000
@@ -345,14 +345,14 @@
     ############################
 
     def destroy_event 
-      actor = LegacyEventsGenerator.actor_object_from_name("HwRack", self.name) 
-      @event = LegacyEventsGenerator.new_user_event("Rack deleted (#{Thread.current[:nice_name]})", {:happened_at => Time.now}) 
+#      actor = LegacyEventsGenerator.actor_object_from_name("HwRack", self.name) 
+#      @event = LegacyEventsGenerator.new_user_event("Rack deleted (#{Thread.current[:nice_name]})", {:happened_at => Time.now}) 
 #      LegacyEventsGenerator.set_actors_for_user_event(@event, actor.source_id, actor.source_type) 
     end 
  
     def create_event 
-      actor = LegacyEventsGenerator.actor_object_from_name("HwRack", self.name) 
-      @event = LegacyEventsGenerator.new_user_event("Rack created (#{Thread.current[:nice_name]})", {:happened_at => Time.now}) 
+#      actor = LegacyEventsGenerator.actor_object_from_name("HwRack", self.name) 
+#      @event = LegacyEventsGenerator.new_user_event("Rack created (#{Thread.current[:nice_name]})", {:happened_at => Time.now}) 
 #      LegacyEventsGenerator.set_actors_for_user_event(@event, actor.source_id, actor.source_type) 
     end 
 
diff -ur emma.orig/ivy/app/models/ivy/power_supply.rb emma/ivy/app/models/ivy/power_supply.rb
--- emma.orig/ivy/app/models/ivy/power_supply.rb	2022-10-11 18:02:56.864876924 +0000
+++ emma/ivy/app/models/ivy/power_supply.rb	2022-10-11 22:41:04.548176089 +0000
@@ -57,8 +57,8 @@
 
     def check_for_changes
       if self.power_strip_id_changed? or self.power_strip_socket_id_changed?
-        actor = LegacyEventsGenerator.actor_object_from_name("power_supply", self.name)
-        @event = LegacyEventsGenerator.new_user_event("Power supply move", {:happened_at => Time.now})
+#        actor = LegacyEventsGenerator.actor_object_from_name("power_supply", self.name)
+#        @event = LegacyEventsGenerator.new_user_event("Power supply move", {:happened_at => Time.now})
 #        LegacyEventsGenerator.set_actors_for_user_event(@event, actor.source_id, "power_supply")
         #Ivy::ChangeEvent.new(:change_type => "power_supply_move", :power_supply_id => self.id, :user_id => 1, 
         #                     :from_where => (self.power_strip_id_changed? and !self.changes[:power_strip_id][0].nil?) ? "power_strip" : nil, 
