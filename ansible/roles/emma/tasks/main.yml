- name: Check for existing installation
  ansible.builtin.command:
    cmd: ls -d {{ emma_path }}
  register: emma_dir
  failed_when: False

- name: Install emma
  when: emma_dir.stdout == ""
  block:
  - name: Download tar file
    ansible.builtin.get_url:
      url: https://api.github.com/repos/alces-flight/concertim-emma/tarball/main
      dest: /tmp/emma.tgz
      headers:
        Authorization: token {{ github_token }}

  - name: Extract tar file
    ansible.builtin.unarchive:
      src: /tmp/emma.tgz
      dest: "{{ rails_root_dir }}"

  - name: Adjust path
    ansible.builtin.shell:
      cmd: |
        mv {{ rails_root_dir }}/alces-flight-concertim-emma-* {{ emma_path }}
        chown -R {{app_user}}:{{app_user}} {{ emma_path }}
      creates: "{{ emma_path }}"

  - name: Sanity check (CT gems)
    ansible.builtin.command:
      cmd: "{{ role_path }}/files/scripts/check_emma_for_ct_gems.sh"
    environment:
      EMMA_CORE_PATH: "{{emma_core_dir}}"

- name: Symlink emma
  ansible.builtin.file:
    src: "{{rails_root_dir}}/emma"
    dest: "/data/private/share/emma"
    state: link

- name: Install configuration
  ansible.builtin.template:
    src: phoenix-emma.logrotate
    dest: /etc/logrotate.d/phoenix-emma

- name: Bundle install gems
  block:
    # FSR not all of the gems for Emma are included in vendor/cache.  We fix this
    # by copying far too many gems across.
    - name: Vendor missing gems
      ansible.builtin.shell:
        cmd: |
          cp -a {{ playbook_dir }}/roles/gems/files/1.9/*.gem {{ emma_core_dir }}/vendor/cache/
          chown {{app_user}}:{{app_user}} {{ emma_core_dir }}/vendor/cache/*.gem
        executable: /bin/bash

    - name: Bundle install gems
      ansible.builtin.shell: |
        cd "{{ emma_core_dir }}"
        PATH={{ruby_19_bin_dir}}:$PATH
        {{ruby_19_bin_dir}}/bundle install --local

- name: Create database
  import_tasks: run_rake_task.yml
  vars:
    ruby_bin_dir: "{{ruby_19_bin_dir}}"
    rake_task: "db:drop_and_create:emma"
    additional_env: ""
    chdir: "{{ emma_core_dir }}"

- name: Populate database
  import_tasks: run_rake_task.yml
  vars:
    ruby_bin_dir: "{{ruby_19_bin_dir}}"
    rake_task: "db:migrate:emma"
    additional_env: ""
    chdir: "{{ emma_core_dir }}"

- name: Precompile assets
  import_tasks: run_rake_task.yml
  vars:
    ruby_bin_dir: "{{ruby_19_bin_dir}}"
    rake_task: "assets:precompile"
    additional_env: ""
    chdir: "{{ emma_core_dir }}"

- name: Install tooling
  ansible.builtin.copy:
    src: scaleout-summary.rb
    dest: /usr/local/sbin/
    owner: root
    group: staff
    mode: "755"

- name: Install systemd files
  include_tasks: install_systemd_files.yml
  vars:
    systemd_service_name: emma
    systemd_instance_names: "{{ emma_ports  | join(' ') }}"

- name: Ensure that emma is enabled
  ansible.builtin.service:
    name: emma
    enabled: yes
