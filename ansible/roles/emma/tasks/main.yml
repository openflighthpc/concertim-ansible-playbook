- name: Check for existing installation
  ansible.builtin.command:
    cmd: ls -d {{ emma_path }}
  register: emma_dir
  failed_when: False

- name: Install emma
  include_tasks: install_emma_package.yml
  when: emma_dir.stdout == ""

- name: Symlink emma
  ansible.builtin.file:
    src: "{{rails_root_dir}}/emma"
    dest: "/data/private/share/emma"
    state: link

- name: Install logrotate configuration
  ansible.builtin.template:
    src: phoenix-emma.logrotate
    dest: /etc/logrotate.d/phoenix-emma

- name: Bundle install gems
  block:
    - name: Patch bundler source
      vars:
        gemfile: "{{emma_core_dir}}/Gemfile"
        original_source: "'http://rubygems.org'"
      include_tasks: patch_bundler_source.yml

    - name: Bundle install gems
      ansible.builtin.shell: |
        cd "{{ emma_core_dir }}"
        PATH={{ruby_19_bin_dir}}:$PATH
        {{ruby_19_bin_dir}}/bundle install

- name: Create database
  import_tasks: run_rake_task.yml
  vars:
    ruby_bin_dir: "{{ruby_19_bin_dir}}"
    rake_task: "db:drop_and_create:emma"
    additional_env: ""
    chdir: "{{ emma_core_dir }}"

- name: Populate database
  import_tasks: run_rake_task.yml
  vars:
    ruby_bin_dir: "{{ruby_19_bin_dir}}"
    rake_task: "db:migrate:emma"
    additional_env: ""
    chdir: "{{ emma_core_dir }}"

- name: Precompile assets
  import_tasks: run_rake_task.yml
  vars:
    ruby_bin_dir: "{{ruby_19_bin_dir}}"
    rake_task: "assets:precompile"
    additional_env: ""
    chdir: "{{ emma_core_dir }}"

- name: Install tooling
  ansible.builtin.copy:
    src: scaleout-summary.rb
    dest: /usr/local/sbin/
    owner: root
    group: staff
    mode: "755"

- name: Install systemd files
  include_tasks: install_systemd_files.yml
  vars:
    systemd_service_name: emma
    systemd_instance_names: "{{ emma_ports  | join(' ') }}"

- name: Ensure that emma is enabled
  ansible.builtin.service:
    name: emma
    enabled: no
    state: stopped
