Binary files hacor.orig/app/models/.cluster.rb.swp and hacor/app/models/.cluster.rb.swp differ
diff -x tmp -x log -ur -u hacor.orig/app/models/cluster.rb hacor/app/models/cluster.rb
--- hacor.orig/app/models/cluster.rb	2016-09-09 18:09:19.000000000 +0000
+++ hacor/app/models/cluster.rb	2022-09-23 12:19:36.233746755 +0000
@@ -243,37 +243,37 @@
     @dns_config = (YAML::load_file(DNS_CONFIG_FILE) rescue {}) || {}
   end
 
-  def update_network_configurations(opts = {})
-    # XXX - should probably reconfigure UML stuff here too one day
+  #def update_network_configurations(opts = {})
+  #  # XXX - should probably reconfigure UML stuff here too one day
 
-    RAILS_DEFAULT_LOGGER.info "Updating NFS config"
-    data=File.read("/etc/exports.template").split("\n")
-    data.each {|l| l.gsub!(/%BASENETWORK%/,"#{management_network_network}")}
-    data.each {|l| l.gsub!(/%NETMASK%/,"#{management_network_netmask}")}
-    data.each {|l| l.gsub!(/%VPNNETWORK%/,"#{vpn_network_network}")}
-    data.each {|l| l.gsub!(/%VPNNETMASK%/,"#{vpn_network_netmask}")}
-    data.each {|l| l.gsub!(/%PUBLICCOMMENT%/,"")}
-    data.each {|l| l.gsub!(/%PUBLICNETWORK%/,"#{public_network_network}")}
-    data.each {|l| l.gsub!(/%PUBLICNETMASK%/,"#{public_network_netmask}")}
-    File.open('/etc/exports','w') {|f| f.puts data.join("\n")}
-    system('sudo exportfs -ra')
+  #  RAILS_DEFAULT_LOGGER.info "Updating NFS config"
+  #  data=File.read("/etc/exports.template").split("\n")
+  #  data.each {|l| l.gsub!(/%BASENETWORK%/,"#{management_network_network}")}
+  #  data.each {|l| l.gsub!(/%NETMASK%/,"#{management_network_netmask}")}
+  #  data.each {|l| l.gsub!(/%VPNNETWORK%/,"#{vpn_network_network}")}
+  #  data.each {|l| l.gsub!(/%VPNNETMASK%/,"#{vpn_network_netmask}")}
+  #  data.each {|l| l.gsub!(/%PUBLICCOMMENT%/,"")}
+  #  data.each {|l| l.gsub!(/%PUBLICNETWORK%/,"#{public_network_network}")}
+  #  data.each {|l| l.gsub!(/%PUBLICNETMASK%/,"#{public_network_netmask}")}
+  #  File.open('/etc/exports','w') {|f| f.puts data.join("\n")}
+  #  system('sudo exportfs -ra')
 
-    unless opts[:management_network_changed] == false
-      RAILS_DEFAULT_LOGGER.info "Updating VPN config"
-      data=File.read("/etc/openvpn/server-vpn.conf.template").split("\n")
-      data.each {|l| l.gsub!(/%VPNNETWORK%/,"#{vpn_network_network}")}
-      data.each {|l| l.gsub!(/%VPNNETMASK%/,"#{vpn_network_wildcard_mask}")}
-      File.open('/etc/openvpn/server-vpn.conf','w') {|f| f.puts data.join("\n")}
-      Phoenix::Beanstalk::SadeeClient.instance.submit('openvpn_config_refresh')
-    end
-  end
+  #  unless opts[:management_network_changed] == false
+  #    RAILS_DEFAULT_LOGGER.info "Updating VPN config"
+  #    data=File.read("/etc/openvpn/server-vpn.conf.template").split("\n")
+  #    data.each {|l| l.gsub!(/%VPNNETWORK%/,"#{vpn_network_network}")}
+  #    data.each {|l| l.gsub!(/%VPNNETMASK%/,"#{vpn_network_wildcard_mask}")}
+  #    File.open('/etc/openvpn/server-vpn.conf','w') {|f| f.puts data.join("\n")}
+  #    Phoenix::Beanstalk::SadeeClient.instance.submit('openvpn_config_refresh')
+  #  end
+  #end
 
-  def update_pxe_configuration(opts = {})
-    appliance_ip_addr = opts[:appliance_ip_addr]
-    data=File.read("/var/lib/tftpboot/pxelinux.cfg/default.template").split("\n")
-    data.each {|l| l.gsub!(/%APPLIANCEIP%/,appliance_ip_addr)}
-    File.open('/var/lib/tftpboot/pxelinux.cfg/default','w') {|f| f.puts data.join("\n")}
-  end
+  #def update_pxe_configuration(opts = {})
+  #  appliance_ip_addr = opts[:appliance_ip_addr]
+  #  data=File.read("/var/lib/tftpboot/pxelinux.cfg/default.template").split("\n")
+  #  data.each {|l| l.gsub!(/%APPLIANCEIP%/,appliance_ip_addr)}
+  #  File.open('/var/lib/tftpboot/pxelinux.cfg/default','w') {|f| f.puts data.join("\n")}
+  #end
 
   def update_command(opts = nil)
     Phoenix::Deferrals::deferred('update_command', 30) do
